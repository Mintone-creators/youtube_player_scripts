name: Update YouTube Player Script

on:
  workflow_dispatch:
  schedule:
    - cron: "0 * * * *"  # every hour at minute 0

permissions:
  contents: write

jobs:
  check-player:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install UV
        run: pip install uv

      - name: Install deps
        run: uv sync

      - name: Snapshot before (dirs only)
        run: |
          find . -maxdepth 1 -mindepth 1 -type d -printf "%f\n" | sort > before.txt

      - name: Fetch and build JS
        run: uv run workflow.py

      - name: Snapshot after (dirs only)
        run: |
          find . -maxdepth 1 -mindepth 1 -type d -printf "%f\n" | sort > after.txt

      - name: Detect new directory
        id: detect
        run: |
          NEW_DIR=$(comm -13 before.txt after.txt | head -n1)
          if [ -z "$NEW_DIR" ]; then
            echo "skip=true" >> $GITHUB_OUTPUT
            exit 0
          fi
          echo "player_id=$NEW_DIR" >> $GITHUB_OUTPUT
          echo "branch=update-player-$NEW_DIR" >> $GITHUB_OUTPUT

      - name: Skip if nothing new
        if: steps.detect.outputs.skip == 'true'
        run: echo "Nothing to update."

      - name: Check remote branch
        if: steps.detect.outputs.skip != 'true'
        id: branch-check
        run: |
          BR=${{ steps.detect.outputs.branch }}
          if git ls-remote --heads origin "$BR" | grep -q "$BR"; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Abort if branch exists
        if: steps.branch-check.outputs.exists == 'true'
        run: echo "Branch ${{ steps.detect.outputs.branch }} already exists, skipping PR."

      - name: Create branch & push
        if: steps.branch-check.outputs.exists == 'false'
        run: |
          BR=${{ steps.detect.outputs.branch }}
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -b "$BR"
          rm -f before.txt after.txt
          git add --all
          git commit -m "chore: update YouTube player script for ${{ steps.detect.outputs.player_id }}"
          git push --set-upstream origin "$BR"

      - name: Create Pull Request
        if: steps.branch-check.outputs.exists == 'false'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          base: main
          branch: ${{ steps.detect.outputs.branch }}
          title: "Update player script: ${{ steps.detect.outputs.player_id }}"
          commit-message: "chore: update YouTube player script for ${{ steps.detect.outputs.player_id }}"
          body: |
            This PR updates the YouTube decryption script for player ID `${{ steps.detect.outputs.player_id }}`.
            - Generated on ${{ github.run_date }}
            - Includes new `base.js` bundle.
          labels: automated
